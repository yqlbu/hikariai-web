#  _     _ _              _       _              _
# | |__ (_) | ____ _ _ __(_) __ _(_)  _ __   ___| |_
# | '_ \| | |/ / _` | '__| |/ _` | | | '_ \ / _ \ __|
# | | | | |   < (_| | |  | | (_| | |_| | | |  __/ |_
# |_| |_|_|_|\_\__,_|_|  |_|\__,_|_(_)_| |_|\___|\__|
#
# https://github.com/yqlbu/neovim-server
#
# Copyright (C) 2020-2022 yqlbu <https://hikariai.net>
#
# This is a open-source software, liscensed under the MIT License.
# See /License for more information.

name: PR Development Build

# Controls when the action will run.
on:
  # Trigger when PR matches certain events
  pull_request:
    types:
      - opened
      - synchronize,
      - reopened
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "multi-arch build"
  multi-arch-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Get current tag version and pass it as environment variable
      - name: Set environment variable
        run: |
          echo "USERNAME=hikariai" >> $GITHUB_ENV
          echo "REGISTRY=docker.io" >> $GITHUB_ENV
          echo "REPOSITORY=hikariai/hikariai-web" >> $GITHUB_ENV
          echo "IMAGE_TAG=prod" >> $GITHUB_ENV
          # project related params
          echo "ENV=staging" >> $GITHUB_ENV
          echo "DOMAIN=staging.hikariai.net" >> $GITHUB_ENV

      # The docker/setup-qemu action installs QEMU static binaries, which are used to run builders for architectures other than the host.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      # The docker/setup-buildx action configures buildx, which is a Docker CLI plugin that provides enhanced build capabilities.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Login to GitHub Container Registry
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.TOKEN }}

      # Build and Push the images
      - name: Build and Push Latest Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./ci/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          build-args:
            - BUILDKIT_MULTI_PLATFORM=1
            - ENV=${{ env.ENV }}
            - DOMAIN_NAME=${{ env.DOMAIN }}
