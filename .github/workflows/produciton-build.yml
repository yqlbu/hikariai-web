#  _     _ _              _       _              _
# | |__ (_) | ____ _ _ __(_) __ _(_)  _ __   ___| |_
# | '_ \| | |/ / _` | '__| |/ _` | | | '_ \ / _ \ __|
# | | | | |   < (_| | |  | | (_| | |_| | | |  __/ |_
# |_| |_|_|_|\_\__,_|_|  |_|\__,_|_(_)_| |_|\___|\__|
#
# https://github.com/yqlbu/neovim-server
#
# Copyright (C) 2020-2022 yqlbu <https://hikariai.net>
#
# This is a open-source software, liscensed under the MIT License.
# See /License for more information.

name: Production Build

# Controls when the action will run.
on:
  push:
    branches:
      - 'master'
      - 'release/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Workflow related global environment variables
env:
  ENV: prod
  REPOSITORY: hikariai-web
  REGISTRY: docker.io
  REGISTRY_USERNAME: hikariai
  IMAGE_TAG: prod

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pre-action-stage:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get HEAD git sha
        id: export_commit_sha
        run: |
          echo "sha_long=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-6)" >> $GITHUB_OUTPUT

      - name: Get HEAD git commit
        uses: octokit/request-action@v2.x
        id: export_commit_message
        with:
          route: GET /repos/{owner}/{repo}/git/commits/{sha}
          owner: ${{ github.repository_owner }}
          repo: ${{ env.REPOSITORY }}
          sha: ${{ steps.export_commit_sha.outputs.sha_long }}
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    # Workflow outputs
    outputs:
      git_sha_long: ${{ steps.export_commit_sha.outputs.sha_long }}
      git_sha_short: ${{ steps.export_commit_sha.outputs.sha_short }}
      git_commit_message: ${{ fromJson(steps.export_commit_message.outputs.data).message }}

  # PR-based CI flow
  multi-arch-build-stage:
    # Depends on previous workflow
    needs: [pre-action-stage]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Define job related environment variables
    env:
      DOMAIN: www.hikariai.net
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # The docker/setup-qemu action installs QEMU static binaries, which are used to run builders for architectures other than the host.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      # The docker/setup-buildx action configures buildx, which is a Docker CLI plugin that provides enhanced build capabilities.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Login to GitHub Container Registry
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and Push the images
      - name: Build and Push Latest Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./ci/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_USERNAME }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}-${{ needs.pre-action-stage.outputs.git_sha_short }}
            ${{ env.REGISTRY }}/${{ env.REGISTRY_USERNAME }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}-latest
          build-args: |
            ENV=${{ env.ENV }}
            DOMAIN_NAME=${{ env.DOMAIN }}
